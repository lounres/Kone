<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lounres.github.io/Kone/docs/blog</id>
    <title>Kone Blog</title>
    <updated>2023-03-26T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lounres.github.io/Kone/docs/blog"/>
    <subtitle>Kone Blog</subtitle>
    <icon>https://lounres.github.io/Kone/docs/img/logos/kone-mark-themed.svg</icon>
    <entry>
        <title type="html"><![CDATA[Introducing Kone]]></title>
        <id>https://lounres.github.io/Kone/docs/blog/debut-post</id>
        <link href="https://lounres.github.io/Kone/docs/blog/debut-post"/>
        <updated>2023-03-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hi! I'm Gleb.]]></summary>
        <content type="html"><![CDATA[<p>Hi! I'm Gleb.
I'm undergraduate math student at SPbU in Saint Petersburg, Russia.
And I introduce you Kone, a library that helps you do math experiments with more ease.</p><h1>Why did I create this library?</h1><p>Since I was in 8th grade of school I loved to do math.
And sometimes I unconsciously experimented by calculating a number of the first elements of different series.
For example, the most standard problem is to found out that sum <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mi>k</mi></msup><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo>+</mo><mo>â‹¯</mo><mo>+</mo><msup><mi>n</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">1^k + 2^k + \dots + n^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em"></span><span class="minner">â‹¯</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8491em"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em">k</span></span></span></span></span></span></span></span></span></span></span></span> for some fixed <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal" style="margin-right:0.03148em">k</span></span></span></span></span> is actually
a polynomial of <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal">n</span></span></span></span></span> (of degree <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.03148em">k</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">1</span></span></span></span></span>).
And there is a lot of interesting theory around the problem.
So sometimes I was so impatient that I calculated the first several polynomials.
But it was such a hassle to calculate them by hand. And it still is ðŸ˜‰.
The calculations were very simple to describe but very hard to calculate manually without mistakes.
So I created a small library in Python that helped me with such a hassle.
After that the library was growing because of new computational problems.
And at some point it was rewritten in Kotlin.
But it looked like hell full of non-reusable scripts of an amateur programmer
that I rewrote it in Kotlin one more time from a scratch but now on a clean architecture.
Also, around this time I've got to know KMath and its authors.
So I mimicked KMath in some architectural questions.
And using prototype of my new library I even contributed in KMath about 37K strings of code ðŸ˜….</p>]]></content>
        <author>
            <name>Gleb Minaev</name>
            <uri>https://github.com/lounres</uri>
        </author>
        <category label="KMath" term="KMath"/>
    </entry>
</feed>